swagger: "2.0"
info:
  description: "here is my Restuarant service api documentation."
  version: "1.0.0"
  title: "Swagger Restuarant"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8082"
basePath: "/"
schemes:
- "http"
- "https"
paths:   
  /restuarants/add-restuarant:
    post:
      tags:
      - "restuarant"
      summary: "Add a new restuarant to the database"
      description: ""
      operationId: "add-restuarant"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Pet"
      responses:
        "405":
          description: "Invalid input"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
  /restuarants/update-restuarant/{id}:  
    put:
      tags:
      - "Restuarant"
      summary: "Update an existing Restuarant"
      description: ""
      operationId: "updateRestuarant"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Pet"
      responses:
        "400":
          description: ""
        "404":
          description: ""
        "405":
          description: ""
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
  /restuarants/delete-restuarant/{id}:  
    put:
      tags:
      - ""
      summary: "deactivate an existing "
      description: ""
      operationId: "deactivate"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Pet"
      responses:
        "400":
          description: ""
        "404":
          description: ""
        "405":
          description: ""
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
  /restuarants/get-individual-restuarant/{id}:
    get:
      tags:
      - "restuarant"
      summary: "Find restuarant by ID"
      description: "Returns a single restuarant"
      operationId: "getUserByID"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Pet"
        "400":
          description: ""
        "404":
          description: ""
      security:
      - api_key: []
  /restuarants/add-menu:
    post:
      tags:
      - "menu"
      summary: "Add a new menu to the database"
      description: ""
      operationId: "add-menu"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Pet"
      responses:
        "405":
          description: "Invalid input"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
  /restuarants/update-menu/{id}:  
    put:
      tags:
      - "Restuarant"
      summary: "Update an existing Restuarant"
      description: ""
      operationId: "updateRestuarant"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Pet"
      responses:
        "400":
          description: ""
        "404":
          description: ""
        "405":
          description: ""
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
  /restuarants/delete-restuarant/{id}:  
    put:
      tags:
      - ""
      summary: "deactivate an existing "
      description: ""
      operationId: "deactivate"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
        schema:
          $ref: "#/definitions/Pet"
      responses:
        "400":
          description: ""
        "404":
          description: ""
        "405":
          description: ""
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
  /restuarants/get-individual-menu/{id}:
    get:
      tags:
      - "restuarant"
      summary: "Find restuarant by ID"
      description: "Returns a single restuarant"
      operationId: "getUserByID"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Pet"
        "400":
          description: ""
        "404":
          description: ""
      security:
      - api_key: []
  /restuarants/restuarant-all-menus/{id}:
    get:
      tags:
      - "restuarant"
      summary: "Find restuarant by ID"
      description: "Returns a single restuarant"
      operationId: "getUserByID"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Pet"
        "400":
          description: ""
        "404":
          description: ""
      security:
      - api_key: []
  /restuarants/get-all-menu:
    get:
      tags:
      - "all menu related to restuarant"
      summary: "Find all menu related to restuarant by ID"
      description: "Returns all menu related to restuarant"
      operationId: ""
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Pet"
        "400":
          description: ""
        "404":
          description: ""
      security:
      - api_key: []
  /restuarants/get-all-restuarant:
    get:
      tags:
      - "get All restuarant"
      summary: "get All restuarant"
      description: "get All restuarant"
      operationId: ""
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: ""
        required: true
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/Pet"
        "400":
          description: ""
        "404":
          description: ""
      security:
      - api_key: []